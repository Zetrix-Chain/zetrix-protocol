# Contents

1. [Introduction](#introduction)	3
2. [What is the Token Standard](#what-is-the-token-standard)	3
3. [What is ZTP-20](#what-is-ztp-20)	3
4. [Methods](#methods)	4
5. [Example](#example)	5
6. [Use Case](#use-case)	9
    - [Utility Tokens](#utility-tokens)	9
    - [Stablecoins](#stablecoins)	9
    - [Decentralized Exchanges (DEXs)](#decentralized-exchanges-dexs)	9
    - [Lending and Borrowing Platforms](#lending-and-borrowing-platforms)	9
    - [Tokenized Assets and Securities](#tokenized-assets-and-securities)	9
    - [Gaming and Collectibles](#gaming-and-collectibles)	9
    - [Reward and Loyalty Programs](#reward-and-loyalty-programs)	9

# Introduction

A token standard is a set of rules and specifications that define how a particular type of token should be created, transferred, and managed on a blockchain platform. These standards ensure interoperability, consistency, and security across different tokens built on the same blockchain.

These token standards provide a foundation for developers to create tokens that are compatible with various decentralized applications (dApps), decentralized finance (DeFi) platforms, and other blockchain-based projects. By adhering to these standards, tokens can be easily integrated, traded, and managed across different platforms and ecosystems.

# What is the Token Standard

ZTP-20 is the standard interface for Fungible tokens. This interface enables users to perform actions such as minting and transferring tokens. By adopting this default standard, contracts utilizing ZTP-20 can seamlessly integrate with various services across the network.

# Methods
# Contract Methods

## Token definition

Notes: Token definitions are defined during the init procedure.

- **name**
  - Token Name. Example: “Global Coin”
- **symbol**
  - Token Symbol. Example: GCN
- **describe**
  - Token description: “Global coin token issued by XYZ”
- **decimals**
  - Token decimal places.
- **version**
  - Token version

## Example

```javascript
function init() {
  let paramObj;
  paramObj.name = "Global Coin";
  paramObj.symbol = "GCN";
  paramObj.describe = "Global coin token issued by XYZ";
  paramObj.version = "1";
  paramObj.decimals = 8;
  paramObj.protocol = "ztp20"; // To define that this contract is ZTP-20 standards

  Chain.store("contract_info", JSON.stringify(paramObj));
}
# Function implementation

## balanceOf(address)

Returns the account balance of another account with address Utils.addressCheck(address)

### Example

```javascript
function balanceOf(address) {
  Utils.assert(Utils.addressCheck(address) === true, 'Arg-address is not a valid address.');

  let value = Chain.load(address);
  return value === false ? "0" : value;
}
